worker_processes auto;

events {
  worker_connections 1024;
}

http {
	include mime.types;

	gzip on;
	gzip_comp_level 3;
	gzip_types text/css;
	gzip_types application/javascript;
	
	#GEO
	geoip_country	/etc/nginx/geoip/maxmind-country.dat;
    geoip_city 		/etc/nginx/geoip/GeoLiteCity.dat;

	#Rate Limiting
	limit_req_zone $binary_remote_addr zone=mylimit:10m rate=10r/s;

	#Remove version
	server_tokens off;


upstream backend {
	least_conn;
	include servers;
}



server {
	listen 80;
	include loadhost;
	return 301 https://$host$request_uri;
}

server {
	listen 443 ssl http2;
	include loadhost;

	#Keys
	ssl_certificate /etc/letsencrypt/live/demo.bohemiantrove.io/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/demo.bohemiantrove.io/privkey.pem;
	#Disable SSL
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	#Optimize Cipher Suits
	ssl_prefer_server_ciphers on;
	ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256;
	#Sessions
	ssl_session_cache shared:SSL:50m;
	ssl_session_timeout 4h;
	ssl_session_tickets on;


	root /usr/local/nginx/html;
	#Include Buffers Settings
	include buffers.conf;
	
	set $break 'No';

location / {
	try_files /index.html /index.html =403;

	limit_req zone=mylimit burst=20 nodelay;
	
    #include pushfile;

}

location /request/ {
    proxy_pass http://backend/;
}

location /slap/ {
    alias /usr/local/nginx/html/slap/;
    try_files index index.html =404;

}
location = /geo {
	return 200 "Visiting from $geoip_city, $geoip_country_name";
}

# location ~* \.(jpg|jpeg|gif|png|css|js|ico|xml|rss|txt)$ {
#     try_files $uri $uri =404;
# 	add_header Cache-Control public;
# 	add_header  Pragma public;
# 	add_header Vary Accept-Encoding;
# 	expires 1M;
# }

location = /basic_status {
    stub_status;
	}

location ~* \.(js|jpg|jpeg|png)$ {
    alias /usr/local/nginx/html;
    try_files $uri $uri =403;
}

location /transact/ {
	alias /usr/local/nginx/html/transact/;
	try_files index index.html =404;
}
location /demo/ {
	alias /usr/local/nginx/html/demo/;
	try_files index index.html =404;
}
location /open {
		return 200 "Wings";
	}
location /next {
		return 200 "Next";
	}


    
	
	
	}


 
}
